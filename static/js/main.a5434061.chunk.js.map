{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","handleToggleMode","htmlFor","placeholder","style","backgroundColor","color","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","document","Fragment","heading","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","word","lower","charAt","slice","capitalize","message","App","setMode","_useState3","_useState4","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a5434061.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">About</a>\r\n            </li>\r\n          </ul>\r\n         \r\n          <div className={`form-check form-switch text-${props.mode=== 'light'?'dark':'light'} mx-2`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.handleToggleMode}/>\r\n            <label className=\"form-check-label \" htmlFor=\"flexSwitchCheckDefault\" >Enable dark mode</label>\r\n          </div>\r\n          <form className=\"d-flex\" role=\"search\" >\r\n            <input className={`form-control me-2 text-${props.mode === 'light' ? 'dark' : 'light'}`} type=\"search\" placeholder=\"Search\" aria-label=\"Search\" style={{backgroundColor:props.mode === 'dark'?'#101925': 'white', color: props.mode=== 'dark' ? 'white' : 'black'}}/>\r\n            <button className={`btn btn-outline-success text-${props.mode === 'light' ? 'dark' : 'light'}`} type=\"submit\">Search</button>\r\n          </form>\r\n\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string\r\n                    }\r\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const[text, setText] = useState('Enter text here');\r\n\r\n    const handleOnChange = (event)=>{\r\n        console.log(\"Inside handleOnChange\");\r\n        setText(event.target.value);\r\n    }\r\n      \r\n    const handleUpClick = ()=>{\r\n       console.log(\"Upper Case was clicked\" + text); \r\n       let newText= text.toUpperCase();\r\n       console.log(newText);\r\n       setText(newText);\r\n       console.log(\"After Upper Case was clicked\" + text); \r\n       props.showAlert(\"Converted to UpperCase\", \"success\")\r\n    }\r\n\r\n    const handleLoClick= ()=>{\r\n        console.log(\"Clicked on handleLoClick \" + text);\r\n        let newText=text.toLowerCase();\r\n        console.log(newText);\r\n        setText(newText);\r\n        console.log(\"After click on handleLoClick \"+ text);\r\n        props.showAlert(\"Converted to LowerCase\", \"success\");\r\n    }\r\n\r\n    const handleClrClick= ()=>{\r\n        console.log(\"Clicked on handleClrText\");\r\n        setText(' ')\r\n        console.log(\"After click on handleClrText\")\r\n        props.showAlert(\"Cleared Text\", \"success\")\r\n    }\r\n\r\n    const handleCopyClick = ()=>{\r\n        console.log('Clicked on handleCopyText');\r\n        var text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard\", \"success\")\r\n    }\r\n    document.title = \"TextUtils - Home\"\r\n    return (\r\n    <>\r\n    <div className=\"container\">\r\n \r\n        <h4 className={`text-${props.mode === 'light' ? 'dark' : 'light'}`}>{props.heading}</h4>\r\n        <div className=\"textBox\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={{backgroundColor:props.mode === 'dark'?'#101925': 'white', color: props.mode=== 'dark' ? 'white' : 'black'}}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handleUpClick}>Convert to Upper Case</button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handleLoClick}>Convert to Lower Case</button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handleClrClick}>Clear Text</button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handleCopyClick}>Copy Text</button>\r\n    </div>\r\n    <div className=\"container\">\r\n        <h4 className={`text-${props.mode === 'light' ? 'dark' : 'light'}`}>Summary</h4>\r\n        <p className={`text-${props.mode === 'light' ? 'dark' : 'light'}`}>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p className={`text-${props.mode === 'light' ? 'dark' : 'light'}`}>{0.008 * text.split(\" \").length} minutes read</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\nTextForm.propTypes = {heading: PropTypes.string.isRequired\r\n                     }\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        let lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n        \r\n    }\r\n  \r\n    return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.message}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n    </div>\r\n\r\n  )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, {useState} from 'react'\n\nfunction App() {\n\n  const[mode,setMode] = useState('light'); \n  const[alert,setAlert]= useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      message: message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    }, 2500);\n  }\n\n  const handleToggleMode = ()=>{\n    if (mode === 'light')\n    {\n      setMode('dark');\n      console.log('Dark Mode Enabled');\n      document.body.style.backgroundColor = 'black';\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n      document.title = 'TextUtils - Dark Mode'\n    }\n    else{\n      setMode('light');\n      console.log('Light Mode Enabled');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode'\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"Text Utils\" mode={mode} handleToggleMode={handleToggleMode}/>\n      <Alert alert={alert} showAlert={showAlert}/>\n      <div className=\"container my-3\">   \n      {/* <About/> */}\n      <TextForm heading=\"Text Analyzer\" title=\"Enter Text\" mode={mode} showAlert={showAlert}/>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}